@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> signInManager
@if (signInManager.IsSignedIn(User))
{
    // signed-in user - logout button, username and welcome message
    <li class="nav-item col">
        <a class="nav-link text-dark" asp-controller="Sales" asp-action="Add">Add Sales</a>
    </li>
    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item col">
            <a class="nav-link text-dark" asp-controller="Employee" asp-action="Add">Add Employee</a>

        </li>
    }
    <li class="nav-item col">
        <span class="text-dark">Welcome, @User.Identity.Name</span>
    </li>
    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item col">
            <a asp-action="Index" asp-controller="User" class="nav-link text-dark">Manage Users</a>
        </li>
    }
    <li class="nav-item col">
        <form method="post" asp-action="Logout" asp-controller="Account" asp-area="">
            <input type="submit" value="Log Out" />
        </form>
    </li>
}
else
{
    // get current action
    var action = ViewContext.RouteData.Values["action"]?.ToString();

    // anonymous user - register link and login button
    <li class="nav-item col @Nav.Active("Register", action)">
        <a asp-action="Register" asp-controller="Account" class="nav-link text-dark">Register</a>
    </li>
    <li class="nav-item col">
        <a asp-action="Login" asp-controller="Account" class="nav-link text-dark">Log In</a>
    </li>
}
